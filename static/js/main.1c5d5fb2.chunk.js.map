{"version":3,"sources":["components/peppaPig/peppaPig.js","components/index.js","serviceWorker.js","index.js"],"names":["peppaPig","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","React","Component","Index","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","start","steps","console","log","timer","setInterval","curstep","state","step","clearInterval","setState","end","Ab","require","default","react_default","style","width","display","justifyContent","paddingTop","cur","Boolean","window","location","hostname","match","ReactDOM","render","components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c5d5fb2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport \"./peppaPig.css\"\r\n\r\nclass peppaPig extends React.Component{\r\n  render(){\r\n    return(\r\n      <div>\r\n        <div className=\"peppaPig\">\r\n          {/* <!-- 头部 --> */}\r\n          <div className=\"pig_head\"></div>\r\n          <div className=\"pig_nose\"></div>\r\n          <div className=\"ear left\"></div>\r\n          <div className=\"ear right\"></div>\r\n          <div className=\"nostril left\"></div>\r\n          <div className=\"nostril right\"></div>\r\n          <div className=\"cover\"></div>\r\n          <div className=\"eye left\"></div>\r\n          <div className=\"eye right\"></div>\r\n          <div className=\"nose_under\"></div>\r\n          <div className=\"pig_jaw\"></div>\r\n          <div className=\"bottom\"></div>\r\n          <div className=\"fixface\"></div>\r\n          <div className=\"pig_mouse\">\r\n              <div className=\"part1\"></div>\r\n              <div className=\"part2\"></div>\r\n              <div className=\"part3\"></div>\r\n          </div>\r\n          <div className=\"flush\"></div>\r\n          {/* <!-- 身体 --> */}\r\n          <div className=\"pig_body\"></div>\r\n          {/* <!-- 腿 --> */}\r\n          <div className=\"foot left\"></div>\r\n          <div className=\"foot right\"></div>\r\n          <div className=\"shoes left\"></div>\r\n          <div className=\"shoes right\"></div>\r\n          {/* <!-- 脚下阴影 --> */}\r\n          <div className=\"shadow\"></div>\r\n          {/* <!-- 左手 --> */}\r\n          <div className=\"right_hand\">\r\n              <div className=\"finger_top\"></div>\r\n              <div className=\"finger_middle\"></div>\r\n              <div className=\"finger_bottom\"></div>\r\n          </div>\r\n          {/* <!-- 右手 --> */}\r\n          <div className=\"left_hand\">\r\n              <div className=\"finger_top\"></div>\r\n              <div className=\"finger_middle\"></div>\r\n              <div className=\"finger_bottom\"></div>\r\n          </div>\r\n          {/* <!-- 尾巴 --> */}\r\n          <div className=\"tail\">\r\n              <div className=\"tail_1\"></div>\r\n              <div className=\"tail_2\"></div>\r\n              <div className=\"tail_3\"></div>\r\n              <div className=\"tail_4\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default peppaPig;","import React from \"react\"\r\n\r\nclass Index extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      step:0\r\n    }\r\n  }\r\n  start=(steps)=>{\r\n    console.log(\"get\"+steps)\r\n    let timer=setInterval(() => {\r\n      let curstep=this.state.step;\r\n      if(curstep>=steps){\r\n        clearInterval(timer);\r\n      }\r\n      this.setState({step:++curstep},function(){\r\n        console.log(this.state.step)\r\n      })\r\n    }, 1000);\r\n  }\r\n  end=()=>{\r\n      this.setState({})\r\n  }\r\n  render(){\r\n    // var Ab=require('./doraemon/doraemon.js').default;\r\n    var Ab=require('./peppaPig/peppaPig.js').default;\r\n    return(\r\n      <div style={{width:'100%',display:\"flex\",justifyContent:\"center\",paddingTop:50}}>\r\n        <Ab start={this.start} end={this.end} cur={this.state.step}></Ab>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}