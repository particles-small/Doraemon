{"version":3,"sources":["components/doraemon/doraemon.js","components/index.js","serviceWorker.js","index.js"],"names":["doraemon","props","_this","Object","F_studycode_react_doraemon_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","F_studycode_react_doraemon_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_studycode_react_doraemon_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","total","start","curnum","cur","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","React","Component","Index","classCallCheck","possibleConstructorReturn","getPrototypeOf","steps","console","log","timer","setInterval","curstep","step","clearInterval","setState","end","Ab","require","default","react_default","style","width","display","justifyContent","paddingTop","Boolean","window","location","hostname","match","ReactDOM","render","components","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.72e92f46.chunk.js","sourcesContent":["import React from \"react\"\r\nimport  './doraemon.css'\r\nclass doraemon extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      total:0\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.props.start(28);\r\n  }\r\n  render(){\r\n    var curnum=this.props.cur;\r\n    return(\r\n      <div className=\"doraemon\">\r\n        <div className={curnum>0?\"head\":\"\"}>\r\n            <div className={curnum>1?\"eyes\":\"\"}>\r\n                <div className={curnum>2?\"eye left\":\"\"}></div>\r\n                <div className={curnum>2?\"eye right\":\"\"}></div>\r\n            </div>\r\n            <div className={curnum>3?\"faces\":\"\"}>\r\n                <div className={curnum>3?\"face\":\"\"}></div>\r\n                <div className={curnum>4?\"nose\":\"\"}></div>\r\n                <div className={curnum>5?\"nose-line\":\"\"}></div>\r\n                <div className={curnum>6?\"mouth\":\"\"}></div>\r\n                <div className={curnum>7?\"whiskers\":\"\"}>\r\n                    <div className={curnum>11?\"whisker right top rotate160\":\"\"}></div>\r\n                    <div className={curnum>12?\"whisker right middle\":\"\"}></div>\r\n                    <div className={curnum>13?\"whisker right bottom rotate20\":\"\"}></div>\r\n                    <div className={curnum>8?\"whisker top rotate20\":\"\"}></div>\r\n                    <div className={curnum>9?\"whisker middle\":\"\"}></div>\r\n                    <div className={curnum>10?\"whisker bottom rotate160\":\"\"}></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className={curnum>14?\"neck\":\"\"}>\r\n            <div className={curnum>15?\"bell\":\"\"}>\r\n                <div className={curnum>16?\"bellTongue\":\"\"}></div>\r\n            </div>\r\n        </div>\r\n        <div className={curnum>17?\"body\":\"\"}>\r\n            <div className={curnum>18?\"pocket\":\"\"}></div>\r\n            <div className={curnum>19?\"hand left\":\"\"}>\r\n                <div className={curnum>20?\"arm\":\"\"}></div>\r\n                <div className={curnum>21?\"write\":\"\"}></div>\r\n            </div>\r\n            <div className={curnum>22?\"hand right\":\"\"}>\r\n                <div className={curnum>23?\"arm\":\"\"}></div>\r\n                <div className={curnum>24?\"write\":\"\"}></div>\r\n            </div>\r\n            <div className={curnum>25?\"footer\":\"\"}>\r\n                <div className={curnum>26?\"foot left\":\"\"}></div>\r\n                <div className={curnum>27?\"foot right\":\"\"}></div>\r\n                <div className={curnum>28?\"write\":\"\"}></div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default doraemon;","import React from \"react\"\r\n\r\nclass Index extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      step:0\r\n    }\r\n  }\r\n  start=(steps)=>{\r\n    console.log(\"get\"+steps)\r\n    let timer=setInterval(() => {\r\n      let curstep=this.state.step;\r\n      if(curstep>=steps){\r\n        clearInterval(timer);\r\n      }\r\n      this.setState({step:++curstep},function(){\r\n        console.log(this.state.step)\r\n      })\r\n    }, 1000);\r\n  }\r\n  end=()=>{\r\n      this.setState({})\r\n  }\r\n  render(){\r\n    var Ab=require('./doraemon/doraemon.js').default;\r\n    // var Ab=require('./peppaPig/peppaPig.js').default;\r\n    return(\r\n      <div style={{width:'100%',display:\"flex\",justifyContent:\"center\",paddingTop:50}}>\r\n        <Ab start={this.start} end={this.end} cur={this.state.step}></Ab>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}